setwd("C:/Users/Anthony Caravaggi/Dropbox/Academic/SHINE project/WPs and Projects/WP1- Breeding success and habitat/Data analyses/Breeding success/Data analyses")
setwd("C:/Users/Anthony Caravaggi/Dropbox/Academic/SHINE project/WPs and Projects/WP1- Breeding success and habitat/Data analyses/Breeding success")
write.csv(hh10, "Dataframes/hab_for_allbuffers_10.csv")
write.csv(hh15, "Dataframes/hab_for_allbuffers_15.csv")
library(slidify)
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 01")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/Academic/SHINE project/WPs and Projects/UG biometrics - Chloe")
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 01")
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, row.names = 1)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE)
tapply(tDat$weight, tDat$Sp_C , mean)
tapply(tDat$wing, tDat$Sp_C , mean)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
tapply(tDat$wing, tDat$Sp_C , mean)
by(tDat$wing, tDat$Sp_C, mean)
by(tDat$wing, tDat$Sp_C, function(x) mean(x))
by(tDat, tDat$Sp_C, function(x) mean(x))
by(tDat, tDat$Weight, function(x) mean(x))
by(tDat, tDat$Weight, function(x) {
# calcuate the mean weight for each species
mean.w <- mean(x$Weight)
}))
by(tDat, tDat$Weight, function(x) {
# calcuate the mean weight for each species
mean.w <- mean(x$Weight)
})
by(tDat, tDat$Sp_C, function(x) {
# calcuate the mean weight for each species
mean.w <- mean(x$Weight)
})
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
tDat[tDat$Sp_C == "Green woodpecker", ]
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
plot(density(tDat$Weight[tDat$Sp_C == "Blackbird", ]))
plot(density(tDat[tDat$Sp_C == "Blackbird", tDat$Weight ]))
plot(density(tDat[tDat$Sp_C == "Blackbird",]))
greti <- tDat[tDat$Sp_C == "Great tit", ]
plot(density(greti$Weight));plot(density(greti$Wing))
plot(density(greti$Weight))
plot(density(greti$Wing))
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$Sp_C == "Great tit", ]
plot(density(greti$Weight));plot(density(greti$Wing))
shapiro.test(greti$Weight)
qqnorm(greti$Weight);qqline(greti$Weight, col = 2)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
shapiro.test(greti$Weight)
shapiro.test(greti$Wing)
qqnorm(greti$Wing);qqline(greti$Wing, col = 2)
shapiro.test(greti$Weight)
shapiro.test(greti$Wing)
qqnorm(greti$Weight);qqline(greti$Weight, col = 2);qqnorm(greti$Wing);qqline(greti$Wing, col = 2)
qqnorm(greti$Weight);qqline(greti$Weight, col = 2)
qqnorm(greti$Weight);qqline(greti$Weight, col = 2);qqnorm(greti$Wing);qqline(greti$Wing, col = 2)
greti$Wing
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti$Wing
greti <- tDat[tDat$Sp_C == "Great tit", ]
greti$Wing
greti[greti$Wing == 24 & greti$Wing == 23, ]
greti[greti$Wing == 24 O greti$Wing == 23, ]
greti[greti$Wing == 24 OR greti$Wing == 23, ]
greti[greti$Wing <= 24, ]
greti <- greti[!greti$Wing <= 24,]
min(greti$Wing)
plot(density(greti$Wing))
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
summary(mDat$family == "Bovidae")
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 01")
slidify('index.Rmd')
v1 <- c(13.4, 18.1, 11,9)
v2 <- c(9.5, 12.3, 10.4)
v3 <- c(21.0, 18.3, 17.6)
v <- data.frame(v1, v2, v3)
v1 <- c(13.4, 18.1, 11.9)
v <- data.frame(v1, v2, v3)
head(v)
colnames(v) <- c("Cold", "Warm", "Hot")
head(v)
v
library(reshape2)
v2 <- melt(v)
v2
colnames(v2) <- c("temperature", "r_time")
v2
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
View(tDat)
tDat[ which(tDat$Sp_L=='Philloscopus collybita' & tDat$Age == 4), ]
tDat[ which(tDat$Sp_L=='Phylloscopus collybita' & tDat$Age == 4), ]
robin <- tDat[ which(tDat$Sp_L=='Erithacus rubecula' & tDat$Age == 3 & tDat$Weight >= 18), ]
slidify('index.Rmd')
slidify('index.Rmd')
View(tDat)
View(tDat)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("grid")
install.packages("grid")
slidify('index.Rmd')
install.packages("ggplot2")
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 01")
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$Sp_C == "Great tit", ]
View(greti)
hist(rbeta(10000,5,2))
curve(dbeta(x,8,4),xlim=c(0,1))
title(main="posterior distrobution of p")
plot(density(hist(rbeta(10000,5,2))))
plot(density(rbeta(10000,5,2)))
x <- rbeta(10000,5,2)
hist(x)
lines(density(x, adjust=2), lty="dotted")
hist(x)
lines(density(x, adjust=2), lty="dotted", col="darkgreen", lwd=2)
hist(x, prob = TRUE)
lines(density(x, adjust=2), lty="dotted", col="darkgreen", lwd=2)
lines(density(x), col="blue", lwd=2)
hist(x, prob = TRUE)
lines(density(x, adjust=2), col="blue", lwd=2)
hit(log(x))
hist(log(x))
hist(sqrt(x))
hist(exp(x))
hist(rbeta(10000,5,5))
hist(rbeta(10000,2,5))
hist(rbeta(10000,5,5))
lines(density(rbeta(10000,5,5), adjust=2), col="blue", lwd=2)
hist(rbeta(10000,5,5), prob = TRUE)
lines(density(rbeta(10000,5,5), adjust=2), col="blue", lwd=2)
slidify('index.Rmd')
slidify('index.Rmd')
shapiro.test(rbeta(10000,5,5))
hist(rbeta(5000,5,5), prob = TRUE)
lines(density(rbeta(5000,5,5), adjust=2), col="blue", lwd=2)
slidify('index.Rmd')
greti <- tDat[tDat$Sp_C == "Great tit", ]
hist(greti$Weight, prob = TRUE)
plot(density(greti$Weight))
hist(greti$Weight, prob = TRUE)
lines(density(greti$Weight))
lines(density(greti$Weight, adjust=2), col="blue", lwd=2)
hist(greti$Wing, prob = TRUE)
lines(density(greti$Wing, adjust=2), col="blue", lwd=2)
plot(density(greti$Wing))
slidify('index.Rmd')
slidify('index.Rmd')
y <- rbeta(10000,2,5)
hist(y)
lines(density(y, adjust=2), col="blue", lwd=2)
y <- rbeta(10000,2,5)
hist(y, prob = TRUE)
lines(density(y, adjust=2), col="blue", lwd=2)
hit(log(y))
hist(log(y))
hist(exp(y))
hist(sqrt(y))
plot(density(greti$Wing))
plot(density(log(greti$Wing)))
y <- rbeta(10000,2,5)
hist(y, prob = TRUE)
y <- rbeta(10000,2,10)
hist(y, prob = TRUE)
hist(sqrt(y))
hist(log(y))
plot(density(sqrt(greti$Wing)))
plot(density(exp(greti$Wing)))
z <- rbeta(10000,2,15)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log(z))
z <- rbeta(10000,2,25)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log(z))
z <- rbeta(5000,2,25)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log(z))
z <- rbeta(5000,5,10)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log(z))
z <- rbeta(5000,1,10)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log(z))
hist(log10(z))
z <- rbeta(5000,1,5)
hist(z, prob = TRUE)
lines(density(z, adjust=2), col="blue", lwd=2)
hist(log10(z))
hist(log(z))
hist(x, prob = TRUE)
x <- rbeta(10000,5,2)
hist(x, prob = TRUE)
y <- rbeta(5000,2,5)
hist(y, prob = TRUE)
lines(density(y, adjust=2), col="blue", lwd=2)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
plot(density(greti$Wing))
density(log(greti$Wing))
slidify('index.Rmd')
plot(density(greti$Wing))
lines(density(log(greti$Wing)), add = T)
plot(density(greti$Wing))
plot(density(greti$Wing))
lines(density(log(greti$Wing)))
slidify('index.Rmd')
slidify('index.Rmd')
p <- c(3,56,1,33,91,12,6)
mean(p)
sd(p)
standardize(p)
ctr_std <- function(x) {apply(x, 2, function(y) y - mean(y))}
p2 <- ctr_std(p)
p2 <- ctr_std(p)
ctr_std <- function(x) {scale(x, scale = FALSE)}
p2 <- ctr_std(p)
mean(p2)
sd(p2)
p2 <- scale(p)
mean(p2)
sd(p2)
dat <- data.frame(x = rnorm(10, 30, .2), y = runif(10, 3, 5))
scaled.dat <- scale(dat)
colMeans(scaled.dat)  # faster version of apply(scaled.dat, 2, mean)
apply(scaled.dat, 2, sd)
p2 <- (p - mean(p)) / sd(p)
mean(p2)
sd(p2)
p <- c(3.7,7.3,1.9,4.2,9.1,1.2,6.0)
mean(p)
sd(p)
p2 <- (p - mean(p)) / sd(p)
mean(p2)
sd(p2)
p2 <- scale(p)
mean(p2)
sd(p2)
p <- runif(100, min=2, max=10)
mean(p)
sd(p)
p2 <- (p - mean(p)) / sd(p)
mean(p2)
sd(p2)
p <- runif(1000, min=2, max=10)
p2 <- (p - mean(p)) / sd(p)
mean(p2)
sd(p2)
p2 <- scale(p, scale = TRUE)
mean(p2)
p2 <- scale(p, scale = FALSE)
mean(p2)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
p <- as.vector(runif(1000, min=2, max=10))
p
slidify('index.Rmd')
mean(p2)
set seed(42)
setseed(42)
set.seed(42)
p <- matrix(rnorm(15), 5, 3)
head(p)
p2 <- scale(p)
mean(p2)
mean(p2[,1])
head(p)
head(p2)
slidify('index.Rmd')
mean(p2$r)
View(pr)
mean(p2)
mean(p2[,1])
mean(p2[,2])
slidify('index.Rmd')
hist(pr$r)
hist(p2$r)
p2 <- as.data.frame(scale(pr))
slidify('index.Rmd')
hist(pr$r, prob = TRUE)
lines(density(pr$r, adjust=2), col="blue", lwd=2)
hist(p2$r, prob = TRUE)
lines(density(p2$r, adjust=2), col="blue", lwd=2)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
hist(sqrt(y))
hist(exp(x))
lines(density(exp(x), adjust=2), col="blue", lwd=2)
hist(exp(x), prob = TRUE)
lines(density(exp(x), adjust=2), col="blue", lwd=2)
hist(log(x), prob = TRUE)
hist(exp(x), prob = TRUE)
lines(density(log(x), adjust=2), col="blue", lwd=2)
lines(density(log(x), adjust=2), col="blue", lwd=2)
hist(exp(x), prob = TRUE)
lines(density(log(x), adjust=2), col="blue", lwd=2)
hist(exp(x), prob = TRUE)
lines(density(log(x), adjust=2), col="blue", lwd=2)
hist(y, prob = TRUE)
y2 <- log(y2)
y2 <- log(y)
hist(y2, prob = TRUE)
y2 <- sqrt(y)
hist(y2, prob = TRUE)
slidify('index.Rmd')
x2 <- sqrt(x)
hist(x2, prob = TRUE)
x2 <- exp(x)
hist(x2, prob = TRUE)
x <- rbeta(10000,3,2)
hist(x, prob = TRUE)
x2 <- exp(x)
hist(x2, prob = TRUE)
x <- rbeta(10000,4,2)
x2 <- exp(x)
hist(x2, prob = TRUE)
lines(density(x2, adjust=2), col="blue", lwd=2)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
library(MASS)
hist(boxcox(x))
boxcox(x)
x <- as.numeric(x)
hist(boxcox(x))
boxcox(x)
slidify('index.Rmd')
rnorm(10, sd=1:10)
hist(rnorm(10, sd=1:10))
plot(rnorm(10, sd=1:10))
plot(rnorm(100, sd=1:10))
seed(123456)
x = rnorm(500,1,1)
b0 = 1 # intercept chosen at your choice
b1 = 1 # coef chosen at your choice
h = function(x) 1+.4*x # h performs heteroscedasticity function (here
I used a linear one)
eps = rnorm(500,0,h(x))
y = b0 + b1*x + eps
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
plot(rnorm(1000, sd=1:10))
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
lmtest::bptest(lmMod)
slidify('index.Rmd')
car::ncvTest(lmMod)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
install.packages("caret")
slidify('index.Rmd')
library("caret", lib.loc="~/R/win-library/3.4")
slidify('index.Rmd')
boxcox(lm(dist~speed,data=cars),lambda=seq(0,1,by=.1))
slidify('index.Rmd')
slidify('index.Rmd')
View(greti)
rep("11/12/2012", 10)
greti_2 <- data.frame(Date = rep("11/12/2012", 10), Code = rep("GRETI", 10),
Sp_C = rep("Great tit", 10), Sp_L = rep("Parus major", 10),
Type = rep("N", 10), Age = rep("3", 10), Sex = rep("F", 10),
Wing = sample(15:23, 10, replace=TRUE), Weight = sample(4:8, 10, replace=TRUE))
View(greti_2)
slidify('index.Rmd')
View(greti)
View(greti)
names(greti)
colnames(greti)[1] <- "Date"
View(greti)
greti2 <- rbind(greti, greti_outliers)
slidify('index.Rmd')
par(mfrow=c(1, 2))
plot(greti2$Wing, greti2$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(Wing ~ Weight, data=greti2), col="blue", lwd=3, lty=2)
par(mfrow=c(1, 2))
plot(greti$Wing, greti$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(Wing ~ Weight, data=greti), col="blue", lwd=3, lty=2)
abline(lm(greti$Wing ~ greti$Weight, data=greti), col="blue", lwd=3, lty=2)
plot(greti$Wing, greti$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(greti$Wing ~ greti$Weight, data=greti), col="blue", lwd=3, lty=2)
slidify('index.Rmd')
plot(greti$Wing, greti$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", col="red", cex=2)
slidify('index.Rmd')
slidify('index.Rmd')
plot(greti2$Wing, greti2$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(greti2$Wing ~ greti2$Weight, data=greti2), col="blue", lwd=3, lty=2)
plot(greti$Wing, greti$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(greti$Wing ~ greti$Weight, data=greti), col="blue", lwd=3, lty=2)
lm(greti$Wing ~ greti$Weight, data=greti)
plot(greti$Wing, greti$Weight, main="With Outliers", xlab="wing length (cm)", ylab="weight (g)", pch="*", col="red", cex=2)
abline(lm(greti$Wing ~ greti$Weight, data=greti), col="blue", lwd=3)
slidify('index.Rmd')
slidify('index.Rmd')
plot(greti2$Wing, greti2$Weight, main="With Outliers",
xlab="wing length (cm)", ylab="weight (g)", pch="*",
col="red", cex=2)
plot(greti2$Wing, greti2$Weight, main="With Outliers",
xlab="wing length (cm)", ylab="weight (g)", pch="*",
col="red", cex=2)
plot(greti$Wing, greti$Weight, main="With Outliers",
xlab="wing length (cm)", ylab="weight (g)", pch="*",
col="red", cex=2)
slidify('index.Rmd')
slidify('index.Rmd')
quantiles <- quantile(greti$Wing, probs = c(.25, .75))
range <- 1.5 * IQR(tidy_gdp_complete$gdp)
range <- 1.5 * IQR(greti$Wing)
quantiles <- quantile(greti2$Wing, probs = c(.25, .75))
range <- 1.5 * IQR(greti2$Wing)
greti_normal <- subset(greti2, greti2$Wing > (quantiles[1] - range)
& greti2$Wing < (quantiles[2] + range))
plot(greti_normal)
View(greti_normal)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 01")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
