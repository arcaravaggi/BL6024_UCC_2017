df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
df <- data.frame(x= c("5","3","8"))
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
View(df)
df <- data.frame(x= c("crust (5)","things (3)","stuff (8)"))
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
install.packages("weatherData")
library(weatherData)
install.packages("weatherData")
library(weatherData)
test <- getWeatherForMultipleYears(IWESTMEA5, 2014, 2016, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("IWESTMEA5", 2014, 2016, opt_detailed = TRUE,
opt_write_to_file = FALSE)
getStationCode()
getStationCode("Rochfortbridge")
getStationCode("EICK")
test <- getWeatherForMultipleYears("EICK", 2014, 2016, opt_detailed = TRUE,
opt_write_to_file = FALSE)
View(test)
test <- getWeatherForMultipleYears("EIXX0032", 2014, 2014, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("EIXX0032", 2014-01-01, 2014-12-01, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("EIXX0032", 2014, 2015, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("EIXX0003", 2014, 2015, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("IOAKPARK2", 2014, 2015, opt_detailed = TRUE,
opt_write_to_file = FALSE)
getStationCode("IOAKPARK2")
install.packages("rwunderground")
library(rwunderground)
setlocation("IOAKPARK2")
library(rwunderground)
setlocation("IOAKPARK2")
set_location("IOAKPARK2")
loc <- set_location("IOAKPARK2")
history_range(set_location("IOAKPARK2"), "20130101", "20130105")
remove.packages("rwunderground", lib="~/R/win-library/3.3")
library("weatherData", lib.loc="~/R/win-library/3.3")
test <- getWeatherForMultipleYears("IOAKPARK2", 2014, 2015, opt_detailed = TRUE,
opt_write_to_file = FALSE)
test <- getWeatherForMultipleYears("IOAKPARK2", 2015, 2016, opt_detailed = TRUE,
opt_write_to_file = FALSE)
remove.packages("weatherData", lib="~/R/win-library/3.3")
install.packages("metafor")
x <- rnorm(327)
y <- runif(327)
library(spatstat)
libary(remBoot)
library(remBoot)
devtools::install_github("arcaravaggi/remBoot")
library(remBoot)
data(hDat)
grpDat <- split_dat(hDat)
rem(dat = grpDat[[1]], tm = 3600, v = 1.4)
tm <- 202800
v <- 0.009
rem(dat = grpDat[[1]], tm, v)
3600*60
rem(dat = grpDat[[1]], tm = 216000, v = 0.0162)
citation()
devtools::install_github("gsimchoni/CastleOfR")
devtools::install_github("gsimchoni/CastleOfR")
devtools::install_github("gsimchoni/CastleOfR")
library(CastleOfR)
startgame()
startGame()
opendoor(1)
openDoor(1)
2^3*(10-2)
?takeObject
takeObject(1)
pfor <- readOGR(dsn = "../../../Shapefiles/Forests/PrivateForests2016",
layer = "PrivateForests2016_WGS84") # PrivateForests2016
library(ggplot2)
library(magick)
library(here)
p <- ggplot(tDat2, aes(Wing, Weight, colour = Code)) +
geom_point() +
labs(colour = "Species code") +
labs(x = "Wing length (cm)",
y = "Weight (g)") +
theme_light() +
ggtitle("Birds") +
ggsave(filename = paste0(here("/"), last_plot()$labels$title, ".png"),
width = 5, height = 4, dpi = 300)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
tDat2 <- subset(tDat, tDat$Code %in% c("BLUTI", "CHIFF", "WREN"))
p <- ggplot(tDat2, aes(Wing, Weight, colour = Code)) +
geom_point() +
labs(colour = "Species code") +
labs(x = "Wing length (cm)",
y = "Weight (g)") +
theme_light() +
ggtitle("Birds") +
ggsave(filename = paste0(here("/"), last_plot()$labels$title, ".png"),
width = 5, height = 4, dpi = 300)
background <- image_read(paste0(here("/"), "Birds.png"))
logo_raw <- image_read("assets/img/cat.gif")
frames <- lapply(logo_raw, function(frame) {
image_composite(background, frame, offset = "+70+800")
})
animation <- image_animate(image_join(frames))
image_write(animation, "~/Cars_Travolta.gif")
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
slidify('index.Rmd')
library(slidify)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
logo_raw <- image_read("assets/img/alpaca.gif")
frames <- lapply(logo_raw, function(frame) {
image_composite(background, frame, offset = "+70+800")
})
animation <- image_animate(image_join(frames))
image_write(animation, "~/alpaca_plot.gif")
image_write(animation, "assets/img/alpaca_plot.gif")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
n_distinct(tDat$Sp_C)
length(unique(tDat$Sp_C))
names(tDat$Sp_C)
summary(tDat$Sp_C)
count(tDat$Sp_C)
summary(tDat)
tDat[57,2]
names(tDat)[3]
length(unique(tDat$Sp_C))
tdat[c(12, 87, 197), ]
tDat[c(12, 87, 197), ]
summary(tDat)
median(tDat$Wing)
sqrt(tDat[70,8])
tDat[tDat$Sp_C == "Blackcap", ]
tDat[names(tDat)== "Blackcap"]
tDat[names(tDat$Sp_C)== "Blackcap"]
length(which(tDat$Sp_C == "Blackcap"))
length(tDat$Sp_C == "Blackcap")
b_wi <- tDat[ which(tDat$Sp_C=='Blackbird' & tDat$Wing > 130), ]
length(b_wi)
b_wi <- tDat[ which(tDat$Sp_C=='Blackbird' & tDat$Wing > 130), ]
b_wi
slidify('index.Rmd')
slidify('index.Rmd')
4/(sqrt(5^3)+18)
y <- (2:15)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
weight <- rbeta(1000,650,1500)
hist(weight)
weight <- rbeta(1000,2,5)
hist(weight)
weight <- rbeta(1000,3,6)
hist(weight)
weight <- rbeta(1000,2,6)
hist(weight)
weight
sample(650:1500, 1000, replace=TRUE)
hist(sample(650:1500, 1000, replace=TRUE))
hist(sample(650:1500, 10000, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
hist(sample(650:1500, 100, replace=TRUE))
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
t <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
weight <- sample(650:1500, 100, replace=TRUE)
hist(t)
hist(weight)
pDat <- data.frame(pDat, "assets/img/pDat.csv")
species <- rep("Polecat", 100)
length <- rnorm(100, mean=35, sd=1.89)
pDat <- data.frame(species, length, weight)
write.csv(pDat, "assets/img/pDat.csv")
slidify('index.Rmd')
y <- rbeta(5000,2,5)
x <- rbeta(10000,4,2)
lmM <- lm(x~y)
x <- rbeta(5000,4,2)
lmM <- lm(x~y)
plot(lmM)
y2 <- sqrt(y)
x2 <- exp(x)
lmM <- lm(x2~y2)
plot(lmM)
lmM <- lm(x~y)
plot(lmM)
hist(weight)
plot(density(weight))
weight <- rbeta(1000,3,6)
plot(density(weight))
weight <- rbeta(1000,4,6)
plot(density(weight))
weight <- rbeta(1000,4,8)
plot(density(weight))
weight <- rbeta(1000,5,4)
plot(density(weight))
weight <- rbeta(1000,8,4)
plot(density(weight))
weight <- rbeta(1000,4,7)
plot(density(weight))
weight <- rbeta(1000,4,9)
plot(density(weight))
weight <- rbeta(1000,2,6)
plot(density(weight))
weight <- rbeta(1000,2,9)
plot(density(weight))
weight <- rbeta(1000,2,9)
plot(density(weight))
weight <- rbeta(1000,2,5)
plot(density(weight))
weight <- rbeta(1000,5,2)
plot(density(weight))
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(density(weight))
weight <- sample(650:1500, 100, replace=TRUE)
hist(density(weight))
weight <- as.numeric(sample(650:1500, 100, replace=TRUE))
hist(density(weight))
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
weight <- sample(650:1500, 100, replace=TRUE)
hist(weight)
plot(density(pDat$weight))
weight <- pDat$weight
hist(weight)
t_length <- sample(84:167, 100, prob = 10:1)
t_length <- sample(84:167, 100, replace = TRUE, prob = 10:1)
t_length <- sample(84:167, 100, replace = TRUE, prob = 5:1)
t_length <- sample(84:167, 100, replace = TRUE, prob = 100:1)
t_length <- sample(84:167, 100, replace = TRUE, prob = 50:1)
t_length <- sample(84:167, 100, replace = TRUE, prob = 84:167)
hist(t_length)
t_length <- sample(84:167, 100, replace = TRUE, prob = 167:84)
hist(t_length)
t_length <- sample(84:167, 100, replace = TRUE, prob = 167:84)
hist(t_length)
t_length <- sample(84:167, 100, replace = TRUE, prob = 167:84)
hist(t_length)
t_length <- sample(84:167, 100, replace = TRUE, prob = 167:84)
hist(t_length)
t_length <- sample(84:167, 100, replace = TRUE, prob = 167:84)
hist(t_length)
hist(density(t_length))
pDat["t_length"] <- t_length
ist(density(pDat$t_length))
hist(density(pDat$t_length))
class(t_length)
t <- as.numeric(t_length)
hist(t)
hist(density(t))
pDat$species <- NULL
plot(density(pDat$weight))
plot(density(pDat$t_length))
colnames(pDat) <- c("b", "w", "t")
View(pDat)
plot(density(pDat$w))
write.csv(pDat, "assets/img/pDat.csv")
m <- rnorm(125, mean = 1.6, sd = 0.89)
c <- sample(5:50, 125, replace = TRUE, prob = 1:55)
c <- sample(5:50, 125, replace = TRUE, prob = 1:54)
c <- sample(5:50, 125, replace = TRUE, prob = 1:55)
c <- sample(5:50, 125, replace = TRUE, prob = 5:50)
r <- rnorm(125, mean=35, sd=1.89)
m <- rnorm(125, mean = 1.6, sd = 0.89)
c <- sample(5:50, 150, replace = TRUE)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$Sp_C == "Great tit", ]
greti_outliers <- data.frame(Date = rep("11/12/2012", 10), Code = rep("GRETI", 10),
Sp_C = rep("Great tit", 10), Sp_L = rep("Parus major", 10),
Type = rep("N", 10), Age = rep("3", 10), Sex = rep("F", 10),
Wing = sample(15:23, 10, replace=TRUE), Weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Lecture 02")
greti <- tDat[tDat$Sp_C == "Great tit", ]
View(greti)
View(tDat)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$Sp_C == "Great tit", ]
View(greti)
greti <- tDat[tDat$sp_c == "Great tit", ]
greti_outliers <- data.frame(Code = rep("GRETI", 10),
Sp_C = rep("Great tit", 10), Sp_L = rep("Parus major", 10),
Type = rep("N", 10), Age = rep("3", 10), Sex = rep("F", 10),
Wing = sample(15:23, 10, replace=TRUE), Weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
greti_outliers <- data.frame(code = rep("GRETI", 10),
sp_c = rep("Great tit", 10), sp_l = rep("Parus major", 10),
type = rep("N", 10), age = rep("3", 10), sex = rep("F", 10),
wing = sample(15:23, 10, replace=TRUE), weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
View(greti)
names(greti)[1] <- "code"
greti_outliers <- data.frame(code = rep("GRETI", 10),
sp_c = rep("Great tit", 10), sp_l = rep("Parus major", 10),
type = rep("N", 10), age = rep("3", 10), sex = rep("F", 10),
wing = sample(15:23, 10, replace=TRUE), weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
quantiles <- quantile(greti2$wing, probs = c(.25, .75))
range <- 1.5 * IQR(greti2$wing)
quantiles
range
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
plot(greti2$wing, greti2$weight, main="With Outliers",
xlab="wing length (cm)", ylab="weight (g)", pch="*",
col="red", cex=2)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$sp_c == "Great tit", ]
names(greti)[1] <- "code"
greti_outliers <- data.frame(code = rep("GRETI", 10),
sp_c = rep("Great tit", 10), sp_l = rep("Parus major", 10),
type = rep("N", 10), age = rep("3", 10), sex = rep("F", 10),
wing = sample(15:23, 10, replace=TRUE), weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
slidify('index.Rmd')
slidify('index.Rmd')
c <- sample(5:50, 125, replace = TRUE)
yDat <- data.frame(r, c, m)
r <- rnorm(125, mean=35, sd=1.89)
c <- sample(5:50, 125, replace = TRUE)
m <- rnorm(125, mean = 12, sd = 1.1)
yDat <- data.frame(r, c, m)
r2 <- rnorm(5, mean=74, sd=2.3)
c2 <- sample(5:50, 5, replace = TRUE)
m2 <- rnorm(5, mean = 1.6, sd = 0.89)
ydat2 <- data.frame(r2,c2,m2)
ydat <- rbind(ydat,ydat2)
ydat <- rbind(yDat,yDat2)
yDat2 <- data.frame(r2,c2,m2)
ydat <- rbind(yDat,yDat2)
r <- rnorm(125, mean=35, sd=1.89)
c <- sample(5:50, 125, replace = TRUE)
m <- rnorm(125, mean = 12, sd = 1.1)
yDat <- data.frame(r, c, m)
r <- rnorm(5, mean=74, sd=2.3)
c <- sample(5:50, 5, replace = TRUE)
m <- rnorm(5, mean = 1.6, sd = 0.89)
yDat2 <- data.frame(r,c,m)
ydat <- rbind(yDat,yDat2)
plot(yDat$r, yDat$c)
plot(yDat$r, yDat$m)
r <- rnorm(5, mean=35, sd=1.89)
c <- sample(68:90, 5, replace = TRUE)
m <- rnorm(5, mean = 12, sd = 1.1)
t <- sample(1:3, 5, replace = TRUE)
yDat2 <- data.frame(r,c,m,t)
ydat <- rbind(yDat,yDat2)
yDat <- rbind(yDat,yDat2)
r <- rnorm(125, mean=35, sd=1.89)
c <- sample(5:50, 125, replace = TRUE)
m <- rnorm(125, mean = 12, sd = 1.1)
t <- sample(8:42, 125, replace = TRUE)
yDat <- data.frame(r, c, m, t)
r <- rnorm(5, mean=35, sd=1.89)
c <- sample(68:90, 5, replace = TRUE)
m <- rnorm(5, mean = 12, sd = 1.1)
t <- sample(1:3, 5, replace = TRUE)
yDat2 <- data.frame(r,c,m,t)
yDat <- rbind(yDat,yDat2)
plot(yDat$c, yDat$t)
qqnorm(greti2$wing)
qqnorm(greti2$wing);qqline(greti$wing, col = 2)
qqnorm(yDat$c);qqline(yDat$c, col = 2)
qqnorm(yDat$t);qqline(yDat$t, col = 2)
r <- rnorm(125, mean=35, sd=1.89)
c <- sample(5:50, 125, replace = TRUE)
m <- rnorm(125, mean = 12, sd = 1.1)
t <- sample(14:42, 125, replace = TRUE)
yDat <- data.frame(r, c, m, t)
r <- rnorm(5, mean=35, sd=1.89)
c <- sample(84:90, 5, replace = TRUE)
m <- rnorm(5, mean = 12, sd = 1.1)
t <- sample(1:3, 5, replace = TRUE)
yDat2 <- data.frame(r,c,m,t)
yDat <- rbind(yDat,yDat2)
qqnorm(yDat$t);qqline(yDat$t, col = 2)
qqnorm(yDat$c);qqline(yDat$c, col = 2)
plot(yDat$c, yDat$t)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
greti <- tDat[tDat$sp_c == "Great tit", ]
names(greti)[1] <- "code"
greti_outliers <- data.frame(code = rep("GRETI", 10),
sp_c = rep("Great tit", 10), sp_l = rep("Parus major", 10),
type = rep("N", 10), age = rep("3", 10), sex = rep("F", 10),
wing = sample(15:23, 10, replace=TRUE), weight = sample(4:8, 10, replace=TRUE))
greti2 <- rbind(greti, greti_outliers)
quantiles <- quantile(greti2$wing, probs = c(.25, .75))
range <- 1.5 * IQR(greti2$wing)
greti_normal <- subset(greti2,
greti2$wing > (quantiles[1] - range)
& greti2$wing < (quantiles[2] + range))
plot(greti_normal$wing, greti_normal$weight, main="Without Outliers",
xlab="wing length (cm)", ylab="weight (g)", pch="*",
col="red", cex=2)
qqnorm(greti_normal$wing);qqline(greti_normal$wing, col = 2)
slidify('index.Rmd')
slidify('index.Rmd')
qqnorm(yDat$c);qqline(yDat$c, col = 2)
qqnorm(yDat$t);qqline(yDat$t, col = 2)
write.csv(yDat, "assets/img/yDat.csv")
slidify('index.Rmd')
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
slidify('index.Rmd')
sp <- table(tDat$code)
tDat <- read.csv("assets/img/tDat.csv", header = TRUE, stringsAsFactors=FALSE)
slidify('index.Rmd')
slidify('index.Rmd')
r_count
slidify('index.Rmd')
slidify('index.Rmd')
boxplot(tDat$wing ~ tDat$code)
tDat$code
View(tDat)
slidify('index.Rmd')
View(tDat)
View(tDat)
names(tDat)
slidify('index.Rmd')
slidify('index.Rmd')
cva <-matrix(c(21, 28, 35, 29),ncol=2,byrow=TRUE)
rownames(cva)<-c("yes","no")
colnames(cva)<-c("cat","cosmic_alpaca")
cva <- as.table(cva)
cva
chisq.test(cva)
cva <-matrix(c(21, 28, 35, 29),ncol=2,byrow=TRUE)
rownames(cva)<-c("yes","no")
colnames(cva)<-c("cat","cosmic_alpaca")
cva <- as.table(cva)
cva
tw <- c(21,35)
