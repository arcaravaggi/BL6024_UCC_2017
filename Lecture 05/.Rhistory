df <- data.frame(x= c("5","3","8 [3 - 5]"))
View(df)
separate(df, x, into = c("y", "z"), "\\s+", extra = "merge")
library(tidyr)
install.packages("tidyr")
library(tidyr)
separate(df, x, into = c("y", "z"), "\\s+", extra = "merge")
extract(df, x, into = c("y", "z"), "(\\d+)\\s*(.*)")
df2 <- extract(df, x, into = c("y", "z"), "(\\d+)\\s*(.*)")
View(df2)
df <- data.frame(x= c("5","3","8 (3 - 5)"))
df2 <- extract(df, x, into = c("y", "z"), "(\\d+)\\s*(.*)")
df2 <- extract(df, x, into = c("y", "z"), "(\\d+)\\s*(.*)") +
gsub("[()]", "", df)
df2 <- extract(df, x, into = c("y", "z"), "(\\d+)\\s*(.*)") +
df2 <-   gsub("[()]", "", df2)
df2 <-   gsub("[()]", "", df2)
df2 <- as.data.frame(gsub("[()]", "", df2))
View(df2)
extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
View(df2)
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s")
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "(\\d+)\\s*(.*)")
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+(.*)+).")
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\((*.)+).")
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
df <- data.frame(x= c("5","3","8"))
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
View(df)
df <- data.frame(x= c("crust (5)","things (3)","stuff (8)"))
df2 <- extract(df, x, into = c("Council", "CouncilCode"), "([^(]+)\\s+\\(([0-9]+).")
slidify('index.Rmd')
library(slidify)
setwd("C:/Users/Anthony Caravaggi/Dropbox/GitHub/BL6024_UCC_2017/Slidify basics")
slidify('index.Rmd')
slidify('index.Rmd')
remove.packages("twitteR", lib="~/R/win-library/3.3")
slidify('index.Rmd')
slidify('index.Rmd')
knitr::opts_knit$set(root.dir = "C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img")
model1<-lm(Richness ~ NAP+grainsize+humus+factor(week) + angle2,
data = rich)
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
model1<-lm(Richness ~ NAP+grainsize+humus+factor(week) + angle2,
data = rich)
summary(model1)
max.model <- lm(Richness~NAP+grainsize+humus+factor(week) + angle2,data=rich)
step(max.model, direction = "backward")
min.model = lm(Richness ~ 1, data=rich)
max.model <- formula(lm(Richness~NAP+grainsize+humus+factor(week) + angle2,data=rich))
step(min.model, direction = "forward",max.model)
min.model = lm(Richness ~ 1, data=rich)
max.model <- formula(lm(Richness~NAP+grainsize+humus+factor(week) + angle2,data=rich))
step(min.model, direction = "both",max.model)
set.seed(1)
N <- 200000
y <- rnorm(N)
x1 <- y + rnorm(N)
x2 <- y + rnorm(N)
x3 <- y + rnorm(N)
x4 <- rnorm(N)
x5 <- rnorm(N)
x6 <- x1 + x2 + x3 + rnorm(N)
data <- data.frame(y, x1, x2, x3, x4, x5, x6)
fit1 <- lm(y ~ ., data)
fit2 <- lm(y ~ 1, data)
back<-step(fit1,direction="backward")
forward<-step(fit2,direction="forward",scope=list(upper=fit1,lower=fit2))
both<-step(fit2,direction="both",scope=list(upper=fit1,lower=fit2))
back<-step(fit1,direction="backward")
277553.2 - 277554
forward<-step(fit2,direction="forward",scope=list(upper=fit1,lower=fit2))
both<-step(fit2,direction="both",scope=list(upper=fit1,lower=fit2))
library(car)
vif(fit1)
vifTest<-lm(x6~x1+x2+x3+x4+x5,data=data)
summary(vifTest)$r.squared
1/(1-0.923213)
qplot(x = temp, y = units, data = icecream,xlab="Temperature (Celsius)",
ylab="ice-cream sold")
model1 <- glm(units ~ temp, data=icecream,
family=gaussian(link="identity"))
# load in the icecream data file
icecream<-read.csv("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\icecream.csv")
model1 <- glm(units ~ temp, data=icecream,
family=gaussian(link="identity"))
summary(model1)
# load in the icecream data file
icecream<-read.csv("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\icecream.csv")
# needs ggplot2
qplot(x = temp, y = units, data = icecream,xlab="Temperature (Celsius)",
ylab="ice-cream sold")
library(ggplot2)
# needs ggplot2
qplot(x = temp, y = units, data = icecream,xlab="Temperature (Celsius)",
ylab="ice-cream sold")
model1 <- glm(units ~ temp, data=icecream,
family=gaussian(link="identity"))
summary(model1)
# load in the icecream data file
icecream<-read.csv("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\icecream.csv")
# needs ggplot2
qplot(x = temp, y = units, data = icecream,xlab="Temperature (Celsius)",
ylab="ice-cream sold")
model1 <- glm(units ~ temp, data=icecream,
family=gaussian(link="identity"))
summary(model1)
model2 <- glm(units ~ temp, data=icecream,
family=poisson(link="log"))
model2 <- glm(units ~ temp, data=icecream,
family=poisson)
model2
model2 <- glm(units ~ temp, data=icecream,
family=poisson(link="log"))
model2
m1 <- glm(TotAbund~ MeanDepth, data= Fish, family = poisson)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
head(Fish)
m1 <- glm(TotAbund~ MeanDepth, data= Fish, family = poisson)
par(mar = c(5,5,2,2))
# pick the min and max depths
MyData <- data.frame(MeanDepth = seq(0.804, 4.865, length = 25))
# predict function fills in the data along the curve
P1 <- predict(m1, newdata = MyData, type = "response")
plot(x = Fish$MeanDepth,
y = Fish$TotAbund,
ylim = c(0,1300),
xlab = "Mean depth (km)",
ylab = "Total abundance values", cex.lab = 1.5)
lines(MyData$MeanDepth, P1, lwd = 3)
MyData
MyData
0.9732083-0.8040000
1.1424167-0.9732083
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$fPeriod <- factor(Fish$Period)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$fPeriod <- factor(Fish$Period)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
deviance(m4) / df.residual(m4)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$fPeriod <- factor(Fish$Period)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
deviance(m4) / df.residual(m4)
knitr::opts_knit$set(root.dir = "C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img")
# load the rich data file
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
intercepts <- c(coef(model1)["(Intercept)"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)2"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)3"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)4"])
knitr::opts_knit$set(root.dir = "C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img")
# load the rich data file
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
rich <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\rich.txt",header = T)
intercepts <- c(coef(model1)["(Intercept)"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)2"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)3"],
coef(model1)["(Intercept)"] + coef(model1)["factor(week)4"])
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$fPeriod <- factor(Fish$Period)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
deviance(m4) / df.residual(m4)
require(MASS)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
summary(m4)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
Fish$fPeriod <- factor(Fish$Period)
Fish$LogSA <- log(Fish$SweptArea)
m4 <- glm.nb(TotAbund~ MeanDepth * fPeriod + offset(LogSA), data= Fish)
deviance(m4) / df.residual(m4)
deviance(m4) / df.residual(m4)
deviance(m4) / df.residual(m4)
drop1(m4,test="Chi")
drop1(m4,test="Chi")
require(MASS)
m5 <- glm.nb(TotAbund~ MeanDepth + fPeriod + offset(LogSA), data= Fish)
summary(m5)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
require(MASS)
m5 <- glm.nb(TotAbund~ MeanDepth + fPeriod + offset(LogSA), data= Fish)
Fish <- read.table("C:\\Users\\akane\\Desktop\\Science\\Teaching\\BL6024_UCC_2017\\Lecture 06\\assets\\img\\Fish.txt",header = T)
fPeriod<-factor(Fish$Period)
LogSA <- log(Fish$SweptArea)
require(MASS)
m5 <- glm.nb(TotAbund~ MeanDepth + fPeriod + offset(LogSA), data= Fish)
summary(m5)
#Model validation
E1 <- resid(m5, type = "pearson")
F1 <- fitted(m5)
eta <- predict(m5, type = "link")
par(mfrow = c(2,2), mar = c(5,5,2,2))
plot(x = F1,
y = E1,
xlab = "Fitted values",
ylab = "Pearson residuals",
cex.lab = 1.5)
abline(h = 0, v = 0, lty = 2)
plot(x = c(1:146),
y = cooks.distance(m5),
xlab = "index",
ylab = "cooks distance",
ylim=c(0:1),
cex.lab = 1.5)
plot(x = Fish$MeanDepth,
y = E1,
xlab = "Mean Depth (km)",
ylab = "Pearson residuals",
cex.lab = 1.5,
pch = 16)
abline(h=0, v = 0, lty = 2)
boxplot(E1 ~ Period,
ylab = "Pearson residuals",
data = Fish,
cex.lab = 1.5,
xlab = "Period")
abline(h = 0, v = 0, lty = 2)
